}
ng[i] <- NA
}
ng <- c()
for(i in c(1:10)) {
if(fra$Year[i+1] == (fra$Year[i]+1)) {
ng[i] <- fra$growth[i+1]
}
ng[i] <- NA
}
for(i in c(1:n-1)) {
if(fra$Year[i+1] == (fra$Year[i]+1)) {
ng[i] <- fra$growth[i+1]
}
ng[i] <- NA
}
fra$Year[23] == (fra$Year[23]+1)
fra$Year[24] == (fra$Year[23]+1)
fra$Year[23] == (fra$Year[24]+1)
fra$Year[23] == (fra$Year[22]+1)
fra$Year[24] == (fra$Year[23]+1)
for(i in c(1:n-2)) {
if(fra$Year[i+1] == (fra$Year[i]+1)) {
ng[i] <- fra$growth[i+1]
}
ng[i] <- NA
}
n <- nrow(fra)
for(i in c(1:n-2)) {
if(fra$Year[i+1] == (fra$Year[i]+1)) {
ng[i] <- fra$growth[i+1]
}
ng[i] <- NA
}
for(i in c(1:23)) {
if(fra$Year[i+1] == (fra$Year[i]+1)) {
ng[i] <- fra$growth[i+1]
}
ng[i] <- NA
}
for(i in c(1:24)) {
if(fra$Year[i+1] == (fra$Year[i]+1)) {
ng[i] <- fra$growth[i+1]
}
ng[i] <- NA
}
for(i in c(1:50)) {
if(fra$Year[i+1] == (fra$Year[i]+1)) {
ng[i] <- fra$growth[i+1]
}
ng[i] <- NA
}
n
for(i in c(1:53)) {
if(fra$Year[i+1] == (fra$Year[i]+1)) {
ng[i] <- fra$growth[i+1]
}
ng[i] <- NA
}
for(i in c(1:54)) {
if(fra$Year[i+1] == (fra$Year[i]+1)) {
ng[i] <- fra$growth[i+1]
}
ng[i] <- NA
}
for(i in c(1:n-1)) {
if(fra$Year[i+1] == (fra$Year[i]+1)) {
ng[i] <- fra$growth[i+1]
}
ng[i] <- NA
}
c(1:n)
for(i in c(1:n-1)) {
if(fra$Year[i+1] == fra$Year[i]+1) {
ng[i] <- fra$growth[i+1]
}
ng[i] <- NA
}
n <- nrow(fra)
ng <- c()
for(i in c(1:n-1)) {
if(fra$Year[i+1] == fra$Year[i]+1) {
ng[i] <- fra$growth[i+1]
}
ng[i] <- NA
}
for(i in c(1:n-1)) {
if(fra$Year[i+1] == fra$Year[i]+1) {
ng[i] <- fra$growth[i+1]
}
else {
ng[i] <- NA
}
}
for(i in c(1:n-1)) {
print(i)
}
fra$Year[n] == fra$Year[n-1]+1
fra$Year[n-1] == fra$Year[n-2]+1
for(i in c(1:n-1)) {
if(fra$Year[i+1] == fra$Year[i]+1) {
ng[i] <- fra$growth[i+1]
}
ng[i] <- NA
}
for(i in c(1:n-1)) {
ng[i] <- ifelse(fra$Year[i+1] == fra$Year[i]+1, fra$growth[i+1], NA)
}
ng[n] <- NA
ng
fra$next.growth <- ng
fra
print(fra$next.growth[fra$Year=c(1978, 1972), ])
fra$next.growth[fra$Year=c(1978, 1972), ]
fra$next.growth[fra$Year==c(1978, 1972), ]
fra$next.growth[fra$Year==c(1978, 1972)]
fra$next.growth[fra$Year==c1978]
fra$next.growth[fra$Year==1978]
fra[fra$Year==1978, ]$next.growth
fra[fra$Year==1978, ]
fra$Year==1978
fra$Year=="1978"
fra$Year==1971
fra[fra$Year==c(1971, 1972), ]$next.growth
fra[fra$Year==c1971, ]$next.growth
fra[fra$Year==1971, ]$next.growth
fra[fra$Year==1972, ]$next.growth
signif(fra[fra$Year==1971, ]$next.growth, 3)
signif(fra[fra$Year==1972, ]$next.growth, 3)
fra
debt
add_next <- function(df) {
n <- nrow(df)
ng <- c()
for(i in c(1:n-1)) {
ng[i] <- ifelse(df$Year[i+1] == df$Year[i]+1, df$growth[i+1], NA)
}
ng[n] <- NA
df$next.growth <- ng
}
ddply(debt, .(Country), add_next)
ddply(debt, Country, add_next)
add_next <- function(df) {
n <- nrow(df)
ng <- c()
for(i in c(1:n-1)) {
ng[i] <- ifelse(df$Year[i+1] == df$Year[i]+1, df$growth[i+1], NA)
}
ng[n] <- NA
df$next.growth <- ng
return(df)
}
ddply(debt, .(Country), add_next)
debt
debt <- ddply(debt, .(Country), add_next)
ind <- debt$Country=="France" & debt$Year == 2009
debt[ind, ]
signif(debt[ind, ]$next.growth, 3)
plot(debt$next.growth, debt$ratio)
plot(debt$ratio, debt$next.growth)
l2 <- lm(next.growth~ratio, debt)
abline(l2)
plot(debt$ratio, debt$next.growth)
abline(l2)
abline(l2, col = 'red')
plot(debt$ratio, debt$next.growth)
abline(l2, col = 'red')
plot(debt$ratio, debt$next.growth, xlab = "ratio", ylab = "growth")
l2 <- lm(next.growth~ratio, debt)
abline(l2, col = 'red')
plot(debt$ratio, debt$next.growth, xlab = "ratio", ylab = "growth")
abline(l2, col = 'red')
signif(l2$coefficients, 3)
l2$coefficients
plot(debt$growth, debt$next.growth, xlab = "cur_growth", ylab = "next_growth")
l3 <- lm(growth~ratio, debt)
abline(l3, col = 'red')
signif(l3$coefficients, 3)
signif(l2$coefficients, 3)
signif(l3$coefficients, 3)
setwd("~/Desktop/semester_1/3.LinearRegressionModels/hw4")
knitr::opts_chunk$set(echo = TRUE)
act <- read.table("CH01PR19.txt")
act
gpa <- read.table("CH01PR19.txt")
names(gpa) <- c("Y", "X")
boxplot(gpa$X)
boxplot(gpa$X, main = "boxplot of act score")
lm1 <- lm(Y~X, gpa)
plot(fitted(lm1), residuals(lm1))
plot(fitted(lm1), residuals(lm1), xlab = "fitted values", ylab = "residuals", main = "fitted values against residuals")
plot(fitted(lm1), residuals(lm1), xlab = "fitted values", ylab = "residuals", main = "fitted values against residuals")
plot(fitted(lm1), residuals(lm1), xlab = "fitted values", ylab = "residuals", main = "residuals against fitted values")
plot(fitted(lm1), residuals(lm1), xlab = "fitted values", ylab = "residuals", main = "residuals against fitted values")
qqnorm(residuals(lm1))
qqnorm(rstandard(lm1))
qqline(residuals(lm1))
qqnorm(rstandard(lm1))
qqline(rstandard(lm1))
qqnorm(rstandard(lm1))
qqline(rstandard(lm1))
qqnorm(rstandard(lm1))
qqline(rstandard(lm1))
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
prostate <- read.table("APPENC05.txt")
dat1 <- prostate[, c(2, 3)]
names(dat1) <- c("Y", "X")
plot(dat1$X, dat1$Y, xlab = "cancer volume", ylab = "PSA level")
plot(dat1$X, dat1$Y, xlab = "cancer volume", ylab = "PSA level")
otrs_ind <- dat1$Y > 100
dat1[otrs_ind, ]
dat1 <- dat1[!otrs_ind, ]
plot(dat1$X, dat1$Y, xlab = "cancer volume", ylab = "PSA level", main = "refined data")
plot(dat1$X, dat1$Y, xlab = "cancer volume", ylab = "PSA level", main = "refined data")
plot(dat1$X, log10(dat1$Y), xlab = "cancer volume", ylab = "PSA level", main = "refined data")
plot(dat1$X, log10(dat1$Y), xlab = "cancer volume", ylab = "PSA level", main = "refined data")
lm_pro <- lm(Y~X, dat1)
plot(dat1$X, resid(lm_pro))
lm_pro <- lm(log10(Y)~X, dat1)
plot(dat1$X, resid(lm_pro))
lm_pro <- lm(log~X, dat1)
lm_pro <- lm(Y~X, dat1)
plot(dat1$X, resid(lm_pro))
?predict
predict(lm_pro, X=20)
predict(lm_pro, data.frame(X=20))
predict(lm_pro, newdata = data.frame(X=20))
plot(dat1$X, resid(lm_pro))
plot(dat1$X, resid(lm_pro), xlab = "cancer volume", ylab = "residuals")
estate <- read.table("APPENC07.txt")
set.seed(1)
s_id <- sample(522, 200)
s <- estate[s_id, ]
dat <- s[, c(2, 3)]
names(dat) <- c("Y", "X")
plot(dat$X, dat$Y, xlab = "sqaure feet", ylab = "price")
plot(dat$X, log10(dat$Y), xlab = "sqaure feet", ylab = "log_price")
lm_este <- lm(log(Y)~X, dat)
coef(lm_este)
plot(dat$X, log(dat$Y), xlab = "sqaure feet", ylab = "log_price")
lm_este <- lm(log(Y)~X, dat)
coef(lm_este)
lm_este
summary(lm_este)
dat
log(478000)
log(10)
log(1000)
log(10000)
log(100000)
e^9.21034
exp(9.21034)
log_y1 <- predict(lm_este, newdata = data.frame(X=1100))
log_y2 <- predict(lm_este, newdata = data.frame(X=4900))
log_y1 <- predict(lm_este, newdata = data.frame(X=1100))
log_y2 <- predict(lm_este, newdata = data.frame(X=4900))
exp(log_y1)
exp(log_y2)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
gpa <- read.table("CH01PR19.txt")
names(gpa) <- c("Y", "X")
boxplot(gpa$X, main = "boxplot of ACT score")
lm1 <- lm(Y~X, gpa)
plot(fitted(lm1), residuals(lm1), xlab = "fitted values", ylab = "residuals", main = "residuals against fitted values")
qqnorm(rstandard(lm1))
qqline(rstandard(lm1))
quantile(resid(lm1))
ecdf(resid(lm1))
qqnorm(rstandard(lm1))
qqline(rstandard(lm1))
sort(resid(lm1))
order(resid(lm1))
rank(c(1, 3, 4))
rank(c(4, 3, 5, 1))
rank(c(4, 3, 5, 1))/4
nrow(gpa)
qqnorm(rstandard(lm1))
qqline(rstandard(lm1))
qqnorm(resid(lm1))
qqline(resid(lm1))
pnorm(0)
qnorm(0.5)
n <- nrow(gpa)
ExpVals = sapply(1:n, function(k) qnorm((k-.375)/(n+.25)))
cor(ExpVals,sort(rstandard(lm1)))
StdErr = summary(College)$sigma
StdErr = summary(College)$sigma
StdErr = summary(lm1)$sigma
n <- nrow(gpa)
ExpVals = sapply(1:n, function(k) StdErr * qnorm((k-.375)/(n+.25)))
cor(ExpVals,sort(resid(lm1)))
sigma(lm1)
StdErr
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
gpa <- read.table("CH01PR19.txt")
names(gpa) <- c("Y", "X")
lm1 <- lm(Y~X, gpa)
se <- sigma(lm1)
n <- nrow(gpa)
exv <-  sapply(1:n, function(k) qnorm((k-.375)/(n+.25)))
cor(exv, sort(resid(lm1))/se)
se <- sigma(lm1)
n <- nrow(gpa)
exv <-  sapply(1:n, function(k) se * qnorm((k-.375)/(n+.25)))
#exv <-  sapply(1:n, function(k) qnorm((k-.375)/(n+.25)))
cor(exv, sort(resid(lm1)))
exv <-  sapply(1:n, function(k) qnorm((k-.375)/(n+.25)))
cor(exv, sort((resid(lm1)-mean(resid(lm1)))/se))
(resid(lm1)-mean(resid(lm1)))/se
rstandard(lm1)
resid(lm1)/se
resid(lm1)/sd(resid(lm1))
qqnorm(resid(lm1)/se)
qqline(resid(lm1)/se)
qqline(resid(lm1))
qqnorm(resid(lm1))
qqnorm(resid(lm1))
qqline(resid(lm1))
exv <-  sapply(1:n, function(k) qnorm((k-.375)/(n+.25)))
# standardize the residual
std_res <- (resid(lm1)-mean(resid(lm1)))/se
cor(exv, sort(std_res))
?rstandard
std(resid(lm1)/se)
sd(resid(lm1)/se)
sd(resid(lm1)/sd(resid(lm1)))
sd(rstandard(resid(lm1)))
rstandard(resid(lm1))
rstandard(lm1)
sd(rstandard(lm1))
exv <-  sapply(1:n, function(k) se * qnorm((k-.375)/(n+.25)))
# sorted residual
srt_rs <- sort(std_res)
cor(exv, srt_rs)
sort(std_res)
srt_rs <- sort(resid(lm1))
cor(exv, srt_rs)
sort(resid(lm1))
cor(exv, srt_rs)
root_mse <- sigma(lm1)
n <- nrow(gpa)
#expected value approximation according to page 111
exv <- sapply(1:n, function(k) root_mse * qnorm((k-.375)/(n+.25)))
# sort residual
srt_rs <- sort(resid(lm1))
cor(exv, srt_rs)
gpa
ind1 <- gpa$X < 26
ind2 <- gpa$X >= 26
n1 <- sum(ind1)
n2 <- sum(ind2)
n1
n2
gpa1 <- gpa[ind1, ]
gpa2 <- gpa[ind2, ]
m1 <- median(gpa1)
resid(lm1)
rsd1 <- resid(lm1)[ind1, ]
rsd1 <- resid(lm1)[ind1]
rsd2 <- resid(lm2)[ind2]
rsd1 <- resid(lm1)[ind1]
rsd2 <- resid(lm1)[ind2]
m1 <- median(rsd1)
m2 <- median(rsd2)
exv
abs(-2)
d1_bar <- mean(sapply(rsd1, function(x) abs(x-m1)))
d2_bar <- mean(sapply(rsd2, function(x) abs(x-m2)))
d1_bar
d2_bar
d1_bar <- mean(abs(rsd1-m1))
d2_bar <- mean(abs(rsd2-m2))
d2_bar
?qt
qt(0)
qt(0, 2)
qt(0.5, 2)
ind1 <- gpa$X < 26
ind2 <- gpa$X >= 26
n1 <- sum(ind1)
n2 <- sum(ind2)
rsd1 <- resid(lm1)[ind1]
rsd2 <- resid(lm1)[ind2]
m1 <- median(rsd1)
m2 <- median(rsd2)
d1_bar <- mean(abs(rsd1-m1))
d2_bar <- mean(abs(rsd2-m2))
s_sqr <- (sum((rsd1-m1)^2) + sum((rsd2-m2)^2)) / (n-2)
s <- sqrt(s_sqr)
t <- (d1_bar-d2_bar)/(s*sqrt(1/n1 + 1/n2))
t_ref <- qt(0.995, 118)
t
t_ref
t, t_ref
gpa_new <- read.table("CH03PR03.txt")
names(gpa_new) <- c("Y", "X1", "X2", "X3")
plot(gpa_new$X2, resid(lm1), xlab = "intelligent test score", ylab = "residuals")
plot(gpa_new$X3, resid(lm1), xlab = "rank percentile", ylab = "residuals")
plot(gpa_new$X2, resid(lm1), xlab = "intelligent test score", ylab = "residuals")
plot(gpa_new$X3, resid(lm1), xlab = "rank percentile", ylab = "residuals")
t
qt(0.975, 118)
ind1 <- gpa$X < 26
ind2 <- gpa$X >= 26
n1 <- sum(ind1)
n2 <- sum(ind2)
rsd1 <- resid(lm1)[ind1]
rsd2 <- resid(lm1)[ind2]
m1 <- median(rsd1)
m2 <- median(rsd2)
d1_bar <- mean(abs(rsd1-m1))
d2_bar <- mean(abs(rsd2-m2))
s_sqr <- (sum((rsd1-m1)^2) + sum((rsd2-m2)^2)) / (n-2)
s <- sqrt(s_sqr)
t <- abs((d1_bar-d2_bar)/(s*sqrt(1/n1 + 1/n2)))
t_ref <- qt(0.995, 118)
t
t_ref
t
rsd1
ind1 <- gpa$X < 26
ind2 <- gpa$X >= 26
n1 <- sum(ind1)
n2 <- sum(ind2)
rsd1 <- resid(lm1)[ind1]
rsd2 <- resid(lm1)[ind2]
m1 <- median(rsd1)
m2 <- median(rsd2)
d1_bar <- mean(abs(rsd1-m1))
d2_bar <- mean(abs(rsd2-m2))
s_sqr <- (sum((abs(rsd1-m1)-m1)^2) + sum((abs(rsd2-m2)-m2)^2)) / (n-2)
s <- sqrt(s_sqr)
t <- abs((d1_bar-d2_bar)/(s*sqrt(1/n1 + 1/n2)))
t_ref <- qt(0.995, 118)
t
t_ref
qt(0.975, 118)
ind1 <- gpa$X < 26
ind2 <- gpa$X >= 26
n1 <- sum(ind1)
n2 <- sum(ind2)
rsd1 <- resid(lm1)[ind1]
rsd2 <- resid(lm1)[ind2]
m1 <- median(rsd1)
m2 <- median(rsd2)
d1_bar <- mean(abs(rsd1-m1))
d2_bar <- mean(abs(rsd2-m2))
s_sqr <- (sum((abs(rsd1-m1)-d1_bar)^2) + sum((abs(rsd2-d2_bar)-m2)^2)) / (n-2)
s <- sqrt(s_sqr)
t <- abs((d1_bar-d2_bar)/(s*sqrt(1/n1 + 1/n2)))
t_ref <- qt(0.995, 118)
t
t_ref
ind1 <- gpa$X < 26
ind2 <- gpa$X >= 26
n1 <- sum(ind1)
n2 <- sum(ind2)
rsd1 <- resid(lm1)[ind1]
rsd2 <- resid(lm1)[ind2]
m1 <- median(rsd1)
m2 <- median(rsd2)
d1_bar <- mean(abs(rsd1-m1))
d2_bar <- mean(abs(rsd2-m2))
s_sqr <- (sum((abs(rsd1-m1)-d1_bar)^2) + sum((abs(rsd2-d2_bar)-m2)^2)) / (n-2)
s <- sqrt(s_sqr)
t <- abs((d1_bar-d2_bar)/(s*sqrt(1/n1 + 1/n2)))
t_ref <- qt(0.995, 118)
t
t_ref
qt(0.975, 118)
ind1 <- gpa$X < 26
ind2 <- gpa$X >= 26
n1 <- sum(ind1)
n2 <- sum(ind2)
rsd1 <- resid(lm1)[ind1]
rsd2 <- resid(lm1)[ind2]
m1 <- median(rsd1)
m2 <- median(rsd2)
d1_bar <- mean(abs(rsd1-m1))
d2_bar <- mean(abs(rsd2-m2))
s_sqr <- (sum((abs(rsd1-m1)-d1_bar)^2) + sum((abs(rsd2-d2_bar)-d2_bar)^2)) / (n-2)
s <- sqrt(s_sqr)
t <- abs((d1_bar-d2_bar)/(s*sqrt(1/n1 + 1/n2)))
t_ref <- qt(0.995, 118)
t
t_ref
plot(gpa_new$X2, resid(lm1), xlab = "intelligent test score", ylab = "residuals")
plot(gpa_new$X3, resid(lm1), xlab = "rank percentile", ylab = "residuals")
abs(rsd1-m1)-d1_bar)^2
(abs(rsd1-m1)-d1_bar)^2
(abs(rsd2-d2_bar)-d2_bar)^2
qnorm(c(1, 2, 4,3))
qnorm(1, 2)
qnorm(1, 2, 3)
qnorm(0.1, 0.3)
qnorm(c(0.1, 0.3, 0.4))
qnorm(c(0.1, 0.3, 0.4, 0))
exv <- root_mse*qnorm((c(1:20)-0.375) / (n+0.25))
cor(exv, srt_rs)
exv
exv <- root_mse*qnorm((c(1:n)-0.375) / (n+0.25))
cor(exv, srt_rs)
root_mse <- sigma(lm1)
n <- nrow(gpa)
#expected value approximation according to page 111
exv <- root_mse*qnorm((c(1:n)-0.375) / (n+0.25))
# sort residual
srt_rs <- sort(resid(lm1))
cor(exv, srt_rs)
